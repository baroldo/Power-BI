DynamicCumulative_ByCategory =
VAR CurrentPercentile = MAX('PercentileAxis'[Percentage of Merchants (%)])
VAR SelectedCategory = SELECTEDVALUE('GroupBySelector'[GroupBySelector Fields], "All")

// Define cumulate column name as text for switch
VAR CumulateColumnName =
    SWITCH(
        TRUE(),
        -- Replace these with your actual desired columns for cumulation
        /* e.g. if you have a slicer or param for this */
        1=1, "MARGIN_$"
    )

// Project the base table with the dynamic column as "CumulateValue"
VAR BaseTable =
    SELECTCOLUMNS(
        FILTER(
            ALLSELECTED('MARGIN_DECILIES'),
            NOT(ISBLANK(LOOKUPVALUE('MARGIN_DECILIES'[MARGIN_$],'MARGIN_DECILIES'[Merchant ID],'MARGIN_DECILIES'[Merchant ID])))
        ),
        "MerchantID", 'MARGIN_DECILIES'[Merchant ID],
        "GroupValue",
            SWITCH(
                SelectedCategory,
                "'MARGIN_DECILIES'[SECTOR_DESC]", 'MARGIN_DECILIES'[SECTOR_DESC],
                "'MARGIN_DECILIES'[PROD_CAT]", 'MARGIN_DECILIES'[PROD_CAT],
                "'MARGIN_DECILIES'[INDUSTRY]", 'MARGIN_DECILIES'[INDUSTRY],
                "All", "All"
            ),
        "CumulateValue", SWITCH(
            CumulateColumnName,
            "MARGIN_$", 'MARGIN_DECILIES'[MARGIN_$]
            /* add other columns similarly */
        ),
        "CustomerPercentileRankIncremental", 'MARGIN_DECILIES'[CustomerPercentileRankIncremental]
    )

// Continue with your ranking and cumulative sum logic, now using BaseTable and "CumulateValue" column
VAR GroupValues =
    DISTINCT(SELECTCOLUMNS(BaseTable, "GroupValue", [GroupValue]))

VAR ResultTable =
    ADDCOLUMNS(
        GroupValues,
        "CumulativeValue",
            VAR CurrentGroup = [GroupValue]
            VAR FilteredGroup =
                FILTER(BaseTable, [GroupValue] = CurrentGroup)
            VAR RankedGroup =
                ADDCOLUMNS(
                    FilteredGroup,
                    "Rank",
                        RANKX(
                            FilteredGroup,
                            [CustomerPercentileRankIncremental],
                            ,
                            DESC,
                            DENSE
                        )
                )
            VAR CountGroup = COUNTROWS(FilteredGroup)
            VAR ThresholdRank = ROUNDUP(CurrentPercentile / 100 * CountGroup, 0)
            RETURN
                SUMX(
                    FILTER(RankedGroup, [Rank] <= ThresholdRank),
                    [CumulateValue]
                )
    )

RETURN
    MAXX(
        FILTER(
            ResultTable,
            [GroupValue] =
                SWITCH(
                    SelectedCategory,
                    "'MARGIN_DECILIES'[SECTOR_DESC]", SELECTEDVALUE('MARGIN_DECILIES'[SECTOR_DESC]),
                    "'MARGIN_DECILIES'[PROD_CAT]", SELECTEDVALUE('MARGIN_DECILIES'[PROD_CAT]),
                    "'MARGIN_DECILIES'[INDUSTRY]", SELECTEDVALUE('MARGIN_DECILIES'[INDUSTRY]),
                    "All", "All"
                )
        ),
        [CumulativeValue]
    )
